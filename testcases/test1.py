# NOTE: Generated By HttpRunner v4.1.6
# FROM: demo2.yml
from lib2to3.pgen2 import token
from tkinter import Variable
from httprunner import HttpRunner, Config, Step, RunRequest


class TestCaseDemo2(HttpRunner):

    config = Config("风芒apiautotest").base_url("${ENV(base_url)}")
    
    teststeps = [
        Step(
            RunRequest("刷新token")
            .get("/auth/refresh_token")
            .with_headers(
                **{
                    "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NjE1MDU1MDEsImlkZW50aXR5IjoxLCJpc0xpdmUiOjAsIm9yaWdfaWF0IjoxNjYwOTAwNzAxLCJwaG9uZSI6IjE4OTc2NjQ2OTE5IiwidW5pcXVlTnVtIjoiMjVhOTdkY2FjOGE3OTcxOCIsInV1aWQiOiJiNWRhOTI2YS1hOGY5LTQwYmYtYmIwZi0xYTM5NTVjNTBmOGYifQ.w4yduNy8w1YwukjqJEigTbWuoVBc_7v-btA5nNo-iHM",
                    "User-Agent": "Dalvik/2.1.0 (Linux; U; Android 11; PAFM00 Build/RKQ1.210510.002)",
                    "appCode": "55",
                    "appId": "com.mango.hnxwlb",
                    "deviceId": "25a97dcac8a79718",
                    "registrationID": "18071adc03f5c3302c3",
                    "time": "1658736158",
                    "uniqueNum": "25a97dcac8a79718",
                    "version": "6.2.2",
                }
            )
            .extract().with_jmespath("body.data","token")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json; charset=utf-8")
            .assert_equal("body.msg", "ok")
            .assert_equal("body.status", 1)
            
        ),
        Step(
            RunRequest("my接口")
            
            .get("/author/my")
            .with_headers(
                **{
                    "Authorization": "Bearer ${token}",
                    "User-Agent": "Dalvik/2.1.0 (Linux; U; Android 11; PAFM00 Build/RKQ1.210510.002)",
                    "appCode": "55",
                    "appId": "com.mango.hnxwlb",
                    "deviceId": "25a97dcac8a79718",
                    "registrationID": "18071adc03f5c3302c3",
                    "time": "1658736158",
                    "uniqueNum": "25a97dcac8a79718",
                    "version": "6.2.2",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json; charset=utf-8")
            .assert_equal("body.msg", "ok")
            .assert_equal("body.status", 1)
        ),

        Step(
            RunRequest("个人中心数据")
            .get("/author/myData")
            .with_headers(
                **{
                    "Authorization": "Bearer ${token}",
                    "User-Agent": "Dalvik/2.1.0 (Linux; U; Android 11; PAFM00 Build/RKQ1.210510.002)",
                    "appCode": "55",
                    "appId": "com.mango.hnxwlb",
                    "deviceId": "25a97dcac8a79718",
                    "registrationID": "18071adc03f5c3302c3",
                    "time": "1658736158",
                    "uniqueNum": "25a97dcac8a79718",
                    "version": "6.2.2",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json; charset=utf-8")
            .assert_equal("body.msg", "ok")
            .assert_equal("body.status", 1)
        ),
        Step(
            RunRequest("/news/followWorks新关注")
            .get("/news/followWorks")
            .with_params(
                **{"pageNum": "1", "pageSize": "10", "timestamp": "1658736159"}
            )
            .with_headers(
                **{
                    "Authorization": "Bearer $token",
                    "User-Agent": "Dalvik/2.1.0 (Linux; U; Android 11; PAFM00 Build/RKQ1.210510.002)",
                    "appCode": "55",
                    "appId": "com.mango.hnxwlb",
                    "deviceId": "25a97dcac8a79718",
                    "registrationID": "18071adc03f5c3302c3",
                    "time": "1658736159",
                    "uniqueNum": "25a97dcac8a79718",
                    "version": "6.2.2",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json; charset=utf-8")
            .assert_equal("body.msg", "ok")
            .assert_equal("body.status", 1)
        ),
    ]

if __name__ == "__main__":
    TestCaseDemo2().test_start()
